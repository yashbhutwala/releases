---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgresql
    environment: ${ENVIRONMENT_NAME}
  name: postgresql
spec:
  ports:
  - name: postgresql
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgresql
    environment: ${ENVIRONMENT_NAME}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: postgresql
    environment: ${ENVIRONMENT_NAME}
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      environment: ${ENVIRONMENT_NAME}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgresql
        environment: ${ENVIRONMENT_NAME}
      name: postgresql
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: postgresql-config
        - secretRef:
            name: postgresql-config
        image: registry.access.redhat.com/rhscl/postgresql-96-rhel7:1
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - LD_LIBRARY_PATH=/opt/rh/rh-postgresql96/root/usr/lib64 /opt/rh/rh-postgresql96/root/usr/bin/pg_ctl
                -D /var/lib/postgresql/data/userdata -l logfile stop
        name: postgresql
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /opt/rh/rh-postgresql96/root/usr/bin/pg_isready -h localhost
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresdb
      securityContext:
        fsGroup: 0
      volumes:
      - name: postgresdb
        persistentVolumeClaim:
          claimName: postgresql-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgresql
    environment: ${ENVIRONMENT_NAME}
  name: postgresql-pv-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: ${POSTGRES_PV_SIZE}
